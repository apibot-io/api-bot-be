# This is a basic workflow to help you get started with Actions

name: CI CD workflow
# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    shell: bash

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: check out repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: login to docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: buitoanncth/apibotbe:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Install SSH Key and known_hosts
        run: |
            eval $(ssh-agent -s)
            mkdir -p ~/.ssh
            ssh-keyscan ${{ secrets.SSH_SERVER_IP }} >> ~/.ssh/known_hosts
            ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"
            chmod 644 ~/.ssh/known_hosts
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo chmod 666 /var/run/docker.sock
            docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
            cd ${{ secrets.PATH_TO_PROJECT }}
            docker-compose down
            docker pull ${{ secrets.CI_REGISTRY_IMAGE }}:latest
            docker-compose up -d
            docker image prune -f
